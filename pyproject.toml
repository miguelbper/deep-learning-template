[project]
name = "deep-learning-template"
version = "0.1.0"
description = "A template for deep learning projects, using PyTorch Lightning and Hydra."
readme = "README.md"
requires-python = ">=3.13"
license = {file = "LICENSE"}
authors = [
    {name = "Miguel Pereira", email = "miguel.b.per@gmail.com"},
]
dependencies = [
    "hydra-colorlog>=1.2.0",
    "hydra-core>=1.3.2",
    "hydra-optuna-sweeper>=1.2.0",
    "ipykernel>=6.29.5",
    "lightning>=2.5.1",
    "mlflow>=2.21.0",
    "omegaconf>=2.3.0",
    "optuna>=2.10.1",
    "rich>=13.9.4",
    "rootutils>=1.0.7",
    "tensorboard>=2.19.0",
    "torch>=2.6.0",
    "torchaudio>=2.6.0",
    "torchmetrics>=1.7.0",
    "torchvision>=0.21.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.1.0",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.5",
    "pyright>=1.1.397",
]

# ------------------------------------------------------------------------------
# Dependency sources
# ------------------------------------------------------------------------------

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu", marker = "platform_system == 'Windows'" },
    { index = "pytorch-cuda", marker = "platform_system == 'Linux'" },
]
torchvision = [
    { index = "pytorch-cpu", marker = "platform_system == 'Windows'" },
    { index = "pytorch-cuda", marker = "platform_system == 'Linux'" },
]
torchaudio = [
    { index = "pytorch-cpu", marker = "platform_system == 'Windows'" },
    { index = "pytorch-cuda", marker = "platform_system == 'Linux'" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cuda"
url = "https://download.pytorch.org/whl/cu126"
explicit = true

# ------------------------------------------------------------------------------
# Build
# ------------------------------------------------------------------------------

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

# ------------------------------------------------------------------------------
# Linting
# ------------------------------------------------------------------------------

[tool.ruff]
line-length = 120
exclude = ["typings"]

# Set of rules taken from https://docs.astral.sh/ruff/linter/#rule-selection
[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # Pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
    "SIM",  # flake8-simplify
]

# Set of rules taken from https://rdrn.me/postmodern-python/
[tool.pyright]
venvPath = "."
venv = ".venv"
strict = ["**/*.py"]
pythonVersion = "3.13"
stubPath = "typings"
ignore = ["typings/**"]
